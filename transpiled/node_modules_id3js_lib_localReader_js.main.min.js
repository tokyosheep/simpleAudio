(global["webpackChunk"] = global["webpackChunk"] || []).push([["node_modules_id3js_lib_localReader_js"],{

/***/ "../../node_modules/id3js/lib/localReader.js":
/*!***************************************************!*\
  !*** ../../node_modules/id3js/lib/localReader.js ***!
  \***************************************************/
/*! namespace exports */
/*! export LocalReader [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LocalReader": () => /* binding */ LocalReader
/* harmony export */ });
/* harmony import */ var _reader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reader.js */ "../../node_modules/id3js/lib/reader.js");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ "fs");


/**
 * Provides read access to the local file system
 */
class LocalReader extends _reader_js__WEBPACK_IMPORTED_MODULE_0__.Reader {
    /**
     * @param {string} path Path of the local file
     */
    constructor(path) {
        super();
        this._path = path;
    }
    /** @inheritdoc */
    async open() {
        return new Promise((resolve, reject) => {
            fs__WEBPACK_IMPORTED_MODULE_1__.stat(this._path, (err, stat) => {
                if (err) {
                    reject(err);
                    return;
                }
                this.size = stat.size;
                fs__WEBPACK_IMPORTED_MODULE_1__.open(this._path, 'r', (openErr, fd) => {
                    if (openErr) {
                        reject(err);
                        return;
                    }
                    this._fd = fd;
                    resolve();
                });
            });
        });
    }
    /** @inheritdoc */
    async close() {
        return new Promise((resolve, reject) => {
            if (this._fd === undefined) {
                reject(new Error('Resource not yet open'));
                return;
            }
            fs__WEBPACK_IMPORTED_MODULE_1__.close(this._fd, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    /** @inheritdoc */
    async read(length, position) {
        const buffer = Buffer.alloc(length);
        return new Promise((resolve, reject) => {
            if (this._fd === undefined) {
                reject(new Error('Resource not yet open'));
                return;
            }
            fs__WEBPACK_IMPORTED_MODULE_1__.read(this._fd, buffer, 0, length, position, (err, _bytesRead, buffer) => {
                if (err) {
                    return reject(err);
                }
                const ab = new ArrayBuffer(buffer.length);
                const view = new Uint8Array(ab);
                for (let i = 0; i < buffer.length; i++) {
                    view[i] = buffer[i];
                }
                resolve(ab);
            });
        });
    }
}


/***/ })

}]);
//# sourceMappingURL=node_modules_id3js_lib_localReader_js.main.min.js.map